     1                                  extern printf
     2                                  
     3                                  section .data
     4 00000000 414243444500                strng   db "ABCDE", 0
     5                                      strngLen equ $ - strng - 1 ; string length without 0
     6 00000006 546865206F72696769-         fmt1    db "The original string: %s", 10, 0
     6 0000000F 6E616C20737472696E-
     6 00000018 673A2025730A00     
     7 0000001F 546872652072657665-         fmt2    db "Thre reversed string: %s", 10, 0
     7 00000028 727365642073747269-
     7 00000031 6E673A2025730A00   
     8                                  section .bss
     9                                  section .text
    10                                      global main
    11                                  
    12                                  main:
    13 00000000 55                                  push    rbp
    14 00000001 4889E5                              mov     rbp, rsp
    15                                  
    16 00000004 48BF-                               mov     rdi, fmt1
    16 00000006 [0600000000000000] 
    17 0000000E 48BE-                               mov     rsi, strng
    17 00000010 [0000000000000000] 
    18 00000018 B800000000                          mov     rax, 0
    19 0000001D E8(00000000)                        call    printf
    20                                  
    21 00000022 4831C0                              xor     rax, rax
    22 00000025 48BB-                               mov     rbx, strng ; adress of strng in rbx register
    22 00000027 [0000000000000000] 
    23 0000002F B905000000                          mov     rcx, strngLen; length of strng
    24 00000034 41BC00000000                        mov     r12, 0; register r12 lick pointer
    25                                  pushLoop:
    26 0000003A 428A0423                            mov     al, byte [rbx+r12] ; write symbol in al register
    27 0000003E 50                                  push    rax                     ; push value of rax in stack
    28 0000003F 49FFC4                              inc     r12     
    29 00000042 E2F6                                loop    pushLoop
    30                                  
    31 00000044 48BB-                               mov     rbx, strng
    31 00000046 [0000000000000000] 
    32 0000004E B905000000                          mov     rcx, strngLen
    33 00000053 41BC00000000                        mov     r12, 0
    34                                              popLoop:
    35 00000059 58                                      pop     rax     ; pop smbol from stack
    36 0000005A 42880423                                mov     byte [rbx + r12], al
    37 0000005E 49FFC4                                  inc     r12
    38 00000061 E2F6                                    loop    popLoop
    39 00000063 42C6042300                              mov     byte [rbx + r12], 0  ; symbol 0 in the end of string
    40                                  
    41 00000068 48BF-                               mov     rdi, fmt2
    41 0000006A [1F00000000000000] 
    42 00000072 48BE-                               mov     rsi, strng
    42 00000074 [0000000000000000] 
    43 0000007C B800000000                          mov     rax, 0
    44 00000081 E8(00000000)                        call    printf
    45                                  
    46 00000086 4889EC                              mov rsp, rbp
    47 00000089 5D                                  pop rbp
    48 0000008A C3                                  ret
    49                                  
    50                                  
    51                                  
